// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var welcome = Welcome.FromJson(jsonString);

namespace QuickType1
{
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class MovieInfo
    {
        [JsonProperty("movie_results", NullValueHandling = NullValueHandling.Ignore)]
        public List<MovieResult> MovieResults { get; set; }

        [JsonProperty("search_results", NullValueHandling = NullValueHandling.Ignore)]
        public long? SearchResults { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("status_message", NullValueHandling = NullValueHandling.Ignore)]
        public string StatusMessage { get; set; }
    }

    public partial class MovieResult
    {
        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("year", NullValueHandling = NullValueHandling.Ignore)]
        public long? Year { get; set; }

        [JsonProperty("imdb_id", NullValueHandling = NullValueHandling.Ignore)]
        public string ImdbId { get; set; }
    }

    public partial class MovieInfo
    {
        public static MovieInfo FromJson(string json) => JsonConvert.DeserializeObject<MovieInfo>(json, QuickType1.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this MovieInfo self) => JsonConvert.SerializeObject(self, QuickType1.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}